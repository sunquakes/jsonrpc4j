# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: Gradle Package And Publish To Maven Central

on:
  release:
    types: [created]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: build

    - name: Set up GPG key
      run: |
        echo "${{ secrets.GPG_PRIVATE_KEY }}" | gpg --batch --import
        echo "${{ secrets.SIGNING_PASSWORD }}" | gpg --batch --passphrase-fd 0 --pinentry-mode loopback --output secring.gpg --export-secret-keys

    - name: Configure Gradle properties
      run: |
        echo "signing.keyId=${{ secrets.SIGNING_KEY_ID }}" >> gradle.properties
        echo "signing.password=${{ secrets.SIGNING_PASSWORD }}" >> gradle.properties
        echo "signing.secretKeyRingFile=./secring.gpg" >> gradle.properties

    - name: Determine tag name
      id: get_tag
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Publish artifacts
      run: |

    - name: Publish to Maven Central
      run: |
        if [[ ${{ env.TAG_NAME }} == *"SNAPSHOT" ]]; then
          ./gradlew publishToMavenSnapShotRepository
        else
          ./gradlew publish
        fi
      env:
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
